@page "/association/meetings/{Id:long}"
@inject HttpClient http
@inject NotificationHandler notificationHandler
@inject NavigationManager navigationManager
@inherits SingleResourcePage<MeetingDTO, MeetingUpdated>
@using ThriveDevCenter.Shared.Models
@using ThriveDevCenter.Client.Services
@using ThriveDevCenter.Client.Utilities
@using ThriveDevCenter.Shared.Notifications
@implements IAsyncDisposable

<SingleResourceDisplayer Error="@Error" Loading="@Loading" HasData="@(Data != null)">
    @if (Data != null)
    {
        <h3>Meeting: @Data.Name</h3>


        <h3>Polls</h3>

    }
</SingleResourceDisplayer>

@code {
    protected override Task<MeetingDTO> StartQuery()
    {
        return http.GetFromJsonAsync<MeetingDTO>($"api/v1/Meetings/{Id}",
            HttpClientHelpers.GetOptionsWithSerializers());
    }

    public override void GetWantedListenedGroups(UserAccessLevel currentAccessLevel, ISet<string> groups)
    {
        groups.Add(NotificationGroups.MeetingUpdatedPrefix + Id);
    }

    public async ValueTask DisposeAsync()
    {
        await notificationHandler.Unregister(this);
    }

    protected override Task OnFirstDataReceived()
    {
        return notificationHandler.Register(this);
    }
}
