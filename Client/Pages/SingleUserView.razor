@page "/users/{Id:long}"
@inject HttpClient Http
@inject NotificationHandler NotificationHandler
@inherits SingleResourcePage<UserDTO, UserUpdated>
@using ThriveDevCenter.Shared.Models
@using ThriveDevCenter.Shared.Notifications
@using ThriveDevCenter.Client.Services
@using ThriveDevCenter.Shared.Models.Enums

<h3>User: @Id</h3>

<AccessLimited RequiredGroup="@GroupType.RestrictedUser">
    <SingleResourceDisplayer Error="@Error" Loading="@Loading" HasData="@(Data != null)">
        @if (Data != null)
        {
            <UserInfoPageContent User="@Data" ShowSelfIdentification="@true" />
        }
    </SingleResourceDisplayer>
</AccessLimited>

<DevCenterTitle>User @Id</DevCenterTitle>

@code {
    protected override Task<UserDTO?> StartQuery()
    {
        return Http.GetFromJsonAsync<UserDTO>($"api/v1/UserManagement/{Id}");
    }

    public override void GetWantedListenedGroups(IUserGroupData currentUserGroups, ISet<string> groups)
    {
        if(currentUserGroups.HasGroup(GroupType.Admin))
            groups.Add(NotificationGroups.UserUpdatedPrefixAdminInfo + Id);

        groups.Add(NotificationGroups.UserUpdatedPrefix + Id);
    }

    public async ValueTask DisposeAsync()
    {
        await NotificationHandler.Unregister(this);
    }

    protected override Task OnFirstDataReceived()
    {
        return NotificationHandler.Register(this);
    }

}
